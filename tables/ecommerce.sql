DROP DATABASE IF EXISTS ecommerce;

CREATE DATABASE ecommerce;

USE ecommerce;

CREATE TABLE users (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL
);

CREATE TABLE addresses (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  country VARCHAR(255) NOT NULL,
  province VARCHAR(255) NOT NULL,
  city VARCHAR(255) NOT NULL,
  street VARCHAR(255) NOT NULL,
  number VARCHAR(255) NULL,
  apartment VARCHAR(255) NULL,
  postal_code VARCHAR(255) NOT NULL,

  FOREIGN KEY (user_id) REFERENCES users(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT
);


CREATE TABLE stores (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  name VARCHAR(255) NOT NULL,

  FOREIGN KEY (user_id) REFERENCES users(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT
);

CREATE TABLE products (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  store_id INT UNSIGNED NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(1024) NOT NULL,
  price DECIMAL(6, 2) UNSIGNED NOT NULL,
  discount TINYINT UNSIGNED NOT NULL,
  stock INT UNSIGNED NOT NULL,

  FOREIGN KEY (store_id) REFERENCES stores(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT
);

CREATE TABLE products_images (
  product_id INT UNSIGNED NOT NULL,
  url VARCHAR(255) NOT NULL UNIQUE,

  FOREIGN KEY (product_id) REFERENCES products(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE products_sizes (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  product_id INT UNSIGNED NOT NULL,
  size VARCHAR(255) NOT NULL,

  FOREIGN KEY (product_id) REFERENCES products(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE products_colors (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  product_id INT UNSIGNED NOT NULL,
  color VARCHAR(255) NOT NULL,

  FOREIGN KEY (product_id) REFERENCES products(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE orders (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  address_id INT UNSIGNED NOT NULL,
  invoice_number VARCHAR(255) NOT NULL UNIQUE,
  total_price DECIMAL(9, 2) UNSIGNED NOT NULL,
  status ENUM("DELIVERED", "SHIPPED", "DECLINED") NOT NULL,

  FOREIGN KEY (user_id) REFERENCES users(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,

  FOREIGN KEY (address_id) REFERENCES addresses(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT
);

CREATE TABLE order_products (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  product_id INT UNSIGNED NOT NULL,
  order_id INT UNSIGNED NOT NULL,
  product_color_id INT UNSIGNED NOT NULL,
  product_size_id INT UNSIGNED NOT NULL,
  quantity INT UNSIGNED NOT NULL,
  price DECIMAL(9, 2) UNSIGNED NOT NULL,
  discount TINYINT UNSIGNED NOT NULL,

  FOREIGN KEY (product_id) REFERENCES products(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,

  FOREIGN KEY (order_id) REFERENCES orders(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,

  FOREIGN KEY (product_color_id) REFERENCES products_colors(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,

  FOREIGN KEY (product_size_id) REFERENCES products_sizes(id)
    ON UPDATE CASCADE
    ON DELETE RESTRICT
);

